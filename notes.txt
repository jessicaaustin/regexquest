

TODOs:
======

MVP:
* Add zombie mechanic
** Pop up regex puzzle when colliding when zombie
** If correct: zombie => villager
** If incorrect: lose health
* Add health meter
* Add "villagers saved" meter
* add help/tutorial dialogs to explain how the game works
** and update help dialog to just be a quick reference
* Add title screen?
* figure out a story/narrative and use villagers/signs/artifacts to tell it
* clean up javascript
* look over TODOs

later:
* Add fog effect to map
* Add levels inside the houses
* Reduce size of audio files for faster loading
* add more levels
* add mutants

Thoughts/Ideas:
===============

zombie:
 - has a bunch of text, with "infectious" text interspersed 
 - to "cure" a zombie, remove the infected text
 - may take multiple hits to cure a zombie
 - teaches basics of matching, since you don't have to replace

mutant:
 - similar to zombie, but you need to replace infectious text with something else, instead of just "removing" (matching) it
 - more advanced, can basically increase the complexity by applying many regexes


it's not exactly turn-based--the monster will attack you after a certain amount of time. so being able to create regexps faster is what matters.


one or more baddies
 - each has some text, with certain parts highlighted
 - may or may not be able to get all baddies with single regexp
   - need special equipment to fight multiple at once
 - to fight, type a regexp
 - can narrow down the string with multiple regexps, beat it by narrowing down to selected text
 - each time you "strike", the baddie strikes back


bosses:
 - transform a large piece of text into another (will definitely require multiple tries)

bonus games:
 - timed stuff
 - opposite game: baddies have regexps, you need to write text


game has different stages, with new types of baddies per stage
- exact match
- one or more chars
- optional chars
- digits / words / spaces


problems:
- need some way to discourage conditionals (/cat|hat/)
   - maybe fewer characters => more hit points?


Function.prototype.method = function (name, func) {
    this.prototype[name] = func;
    return this;
}


Resources:
==========

http://opengameart.org/
http://www.nosoapradio.us/
